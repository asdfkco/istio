apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: ratelimitfilter
  namespace: test
spec:
  configPatches:
    - applyTo: HTTP_FILTER
      match:
        context: SIDECAR_INBOUND
        listener:
          filterChain:
            filter: # Envoy의 http connection manager 필터가 적용된 리스너를 가져옵니다.
              name: "envoy.filters.network.http_connection_manager"
      patch:
        operation: INSERT_BEFORE # 기존 필터에 추가합니다.
        value:
          name: envoy.filters.http.local_ratelimit
          typed_config: # 필터의 설정을 가져옵니다.
            # 설정의 타입을 지정합니다.
            "@type": type.googleapis.com/udpa.type.v1.TypedStruct
            # 필터를 무엇을 사용할지 지정합니다
            type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
            value: 
              stat_prefix: http_local_rate_limiter
              token_bucket: # 요청(토큰)을 지정합니다.
                max_tokens: 10 # 최대 토큰값을 정합니다. (요청 1회마다 토큰 하나가 소모됩니다.
                tokens_per_fill: 5 # 토큰 값을 채울 수를 지정합니다.
                fill_interval: 60s # 토큰 채우기 간격을 지정합니다.
              filter_enabled: # 필터의 요청(토큰)값을 소모할 확률을 설정합니다.
                runtime_key: local_rate_limit_enabled
                default_value: # 기본값을 설정합니다.
                  numerator:100 # 분자를 100으로 설정합니다. denominator와 합치게 된다면 100/100 확정적으로 ratelimit을 사용합니다.
                  denominator: HUNDRED # 분모로 100으로 설정합니다. numerator가 100이면 항상 ratelimit을 사용하게 되고 0을 사용하게 되면 ratelimit을 사용하지 않게됩니다.
              filter_enforced: # 최대 요청 값이 다 되었을 때 요청을 제한할 확률을 정합니다.)
                runtime_key: local_rate_limit_enforced
                default_value:
                  numerator: 100 # 분자를 100으로 설정합니다. denominator와 합치게 된다면 100/100 확정적으로 요청을 제한합니다.
                  denominator: HUNDRED# 분모를 100으로 설정합니다. numerator가 100이면 항상 ratelimit을 사용하게 되고 0을 사용하게 되면 ratelimit을 사용하지 않게됩니다.
              response_headers_to_add: # 응답 헤더를 지정합니다.
                - append_action: APPEND_IF_EXISTS_OR_ADD # 헤더 추가 방식을 지정합니다.
                  header:
                    key: x-rate-limited # 헤더의 키값을 지정합니다
                    value: TOO_MANY_REQUESTS # 헤더의 값을 지정합니다.
              status:
                code: 429 # 최대 요청 값을 넘을경우 응답할 http status 입니다.                           
